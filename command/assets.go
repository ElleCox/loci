// Code generated by go-bindata.
// sources:
// assets/Dockerfile
// assets/Dockerfile-go
// assets/Dockerfile-python
// assets/entrypoint
// assets/entrypoint-go
// assets/entrypoint-python
// DO NOT EDIT!

package command

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsDockerfile = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x51\x6f\x9b\x4c\x10\x7c\xe7\x57\xac\x48\xbe\xe8\x6b\x54\x73\x76\x1f\xfa\xe0\xd4\x56\x9d\xda\x55\x69\x6b\x40\x84\x56\xb5\xe2\x28\x22\xb0\x36\x57\x03\x77\x3d\x8e\x38\x16\x72\x7f\x7b\x17\x70\x83\x13\x55\xad\xa5\x93\xd9\xbd\x99\x9d\xd9\xbd\x3d\x31\x4e\x60\x2a\xa2\x0d\xaa\x15\x4f\xd1\xa8\xc3\x77\x42\xee\x14\x5f\x27\x1a\xfe\x8f\x5e\xc0\xab\xfe\xe0\x35\x7c\x2c\x73\x89\x1c\x3e\x85\xdb\x30\x13\x5a\x34\xb0\x20\xe1\x05\x14\x62\xa5\xb7\xa1\x42\xa0\x6f\x85\x29\x86\x05\xc6\x50\xe6\x31\x2a\xd0\x09\xc2\xdc\x0e\xe0\x33\x8f\x30\x2f\xd0\x6a\x48\x89\xd6\x72\xc8\x98\x90\x94\x12\xa5\x8a\xd0\x12\x6a\xcd\xd2\x16\x52\xb0\x8c\xeb\xde\x21\xb0\x64\x22\x89\x52\x55\x31\xae\x78\x8e\x60\xde\x51\x6d\x73\xbf\x37\xde\xfb\xee\x1c\xaa\xca\xea\x5c\xbb\x52\x5b\x97\x74\x6b\x67\xe1\x1a\x09\x31\x9f\xd8\x4e\x40\x67\xe6\x3f\x37\x0e\x6f\x36\x87\x2f\xeb\x7b\x73\xf3\x76\x9d\x85\x3c\xb5\x22\x91\x8d\x0d\x63\xe6\x7c\x85\x60\xe6\xcf\xe1\x5e\x0f\xfa\xfd\x26\x9c\xce\x2e\xed\x89\x73\x4b\x9a\x4e\x30\x73\xa6\x90\x8b\x9c\xe7\x1a\x55\x18\x69\x7e\x8f\xe4\x6e\xcb\x75\x02\xd6\x87\x20\xf0\x3c\x25\x1e\x76\xa4\x5e\xd3\xea\xf8\xd6\xf3\xdd\x6f\x8b\xda\x29\x25\xab\x0a\xf3\xb8\xf9\xef\x08\x57\xcf\x19\x57\x7f\xa5\x38\xe2\x18\xef\xb8\x7f\x04\x3f\xa2\x9f\x4e\x67\x22\xf5\x6f\xb2\xff\xc5\x01\x8c\x12\x01\xe6\x24\xfa\x51\x72\x85\xc3\x61\xfd\x28\x50\x41\x83\x80\xa5\xd9\x54\x5c\x9a\x17\xb0\xbf\x30\x61\x3c\x06\x86\x3a\x62\xa1\xd4\xf5\xa1\x49\xe5\x2b\x2b\x66\xfd\x81\xac\xd1\xff\xd2\xf5\x76\x92\x1f\x0b\x7b\x0b\xcf\x6e\x7d\x8f\x1a\x15\x38\x3b\x83\xa5\x01\xf4\xb3\x3d\xcf\xf5\x83\xd1\x69\xd5\x41\x4e\xce\x19\x3b\x42\x64\x9b\x98\x2b\xe8\x49\xf8\xc9\x2c\xc9\x25\xeb\x6e\xda\x76\xae\xd7\xa9\xb8\x0b\xd3\x9b\x25\xbd\x50\x8c\x0f\xbd\x52\xa5\xa3\xd3\xae\x1a\x53\x42\x68\x26\xc9\xd0\x32\xd7\xaa\x2c\x34\xc6\xbd\x44\x14\x9a\x24\x5b\xed\xff\x86\xe7\xfb\xa6\xdf\x43\x7d\x3a\x4d\xb7\xc7\x3d\x6a\xcc\x64\x1a\x6a\xda\x46\x9a\x85\x09\xed\xe4\xbb\x64\xbb\xd2\x6d\xde\x98\x4c\xa7\x80\x24\xb5\x93\x82\x56\xc6\x2a\x12\x68\x2c\xd0\xeb\x05\xfe\xc2\x73\x69\x45\xe1\xba\x5e\xea\xc4\x7c\x09\x66\xeb\xee\x09\xdc\xbc\x79\x54\xfe\x15\x00\x00\xff\xff\x52\x49\x02\xbf\xa5\x03\x00\x00")

func assetsDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_assetsDockerfile,
		"assets/Dockerfile",
	)
}

func assetsDockerfile() (*asset, error) {
	bytes, err := assetsDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/Dockerfile", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsDockerfileGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x91\xc1\x8e\x13\x31\x0c\x86\xef\xf3\x14\xd6\x16\xad\x00\xa9\x09\x70\xe0\xc0\xad\x50\x04\x65\x61\xbb\x2a\x05\x2e\x5c\x42\xc6\x93\x89\x36\x4d\x22\xc7\xd3\xaa\x54\x7d\x77\xdc\x99\xa9\x8a\x40\x02\xed\x1c\x26\xce\xef\xdf\xb1\xfc\x79\x52\x4d\x60\x9e\xec\x3d\x52\xe3\x03\x4e\x5d\xaa\x4e\xca\x9b\x94\xf7\xe4\x5d\xcb\xf0\xd8\x3e\x81\x17\xcf\x9e\xbf\x84\x0f\x5d\xcc\xe8\xe1\xc6\xec\xcc\x26\xf1\x60\x5b\xb7\xbe\x40\x49\x0d\xef\x0c\x21\x48\x4c\x18\xd0\x14\xac\xa1\x8b\x35\x12\x70\x8b\xf0\x69\xb1\x86\x8f\xde\x62\x2c\xa8\xfa\xa2\x96\x39\xbf\xd2\x3a\x65\x91\x52\x47\x16\x55\x22\xa7\xc3\x60\x29\x7a\xe3\x79\x3a\x5e\x54\x6e\xb3\x94\x1c\x0e\x35\x36\x3e\x22\x5c\x99\xcc\x57\xc7\x63\xb5\xfa\x72\x0b\x12\x4e\x1d\x32\x74\xb9\x36\x8c\x70\x7d\x0d\xdf\x2b\x90\xef\xac\xfb\x58\xd8\x84\x00\xd3\x7d\x2f\x75\xec\x43\x01\x97\x82\x89\x0e\x9c\x67\xd8\x9d\x4c\x87\x03\xc9\x1d\x41\xad\xc9\x6c\x7d\x51\xb3\xba\x4e\x51\x8e\xcc\xea\xce\xd8\x7b\xe3\xb0\x1c\x8f\xe2\x52\xfd\x1f\x63\x2d\xe7\x5f\x9d\xba\xec\xc8\xd4\x78\xea\x24\xb9\xb3\x6a\x05\x44\xbc\x98\x69\x03\x53\x6a\x40\x6f\x0d\x69\x6b\x6c\x8b\x5a\x8c\xda\x90\x6d\xfd\x56\x86\x7e\x3a\x64\x82\xff\xd1\xeb\xc1\x17\x2e\xba\x1a\x5b\x56\xbf\x11\x18\x88\x9d\x20\xbc\xbd\xfd\x0a\xef\x96\x77\xb3\xf5\x7b\xd0\x82\xc0\x54\xb3\xf9\x1c\x46\xa0\x6c\x48\xb9\x9f\xf0\x68\xc8\xeb\x42\x56\xcb\x10\x97\x35\x2f\x65\xc0\x15\xe6\x54\x3c\x27\xda\xcb\x63\xdf\x96\xab\x9b\xf9\x62\xf5\x80\x0a\x59\xe4\x6b\x6c\x92\xac\x7d\x31\x92\xfe\xcc\x98\x8b\xaa\xfe\x64\x3a\xb8\x46\xd3\xb8\xbc\x9e\xe8\x65\xbc\xc9\xff\xde\xf8\x67\xf5\x39\xf8\x15\x00\x00\xff\xff\x22\x6e\x9f\x05\xca\x02\x00\x00")

func assetsDockerfileGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsDockerfileGo,
		"assets/Dockerfile-go",
	)
}

func assetsDockerfileGo() (*asset, error) {
	bytes, err := assetsDockerfileGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/Dockerfile-go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsDockerfilePython = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x10\x2d\x50\x6c\x07\xcb\x6b\x07\xf4\xb0\x5b\xb7\x5c\xba\x76\x1f\xc8\x52\xec\xb2\x8b\x6c\x31\xb6\x50\x45\xd2\x24\x2a\x81\xe3\xf5\xbf\x8f\xb6\xe5\xce\x08\xa6\x8b\xa8\xc7\x47\x42\xef\x91\x97\xab\x4b\x58\xbb\xfa\x19\xc3\x4e\x1b\x2c\x7c\x47\xad\xb3\xab\x01\xfd\xe4\x7c\x17\x74\xd3\x12\xbc\xa9\xdf\xc2\xcd\xbb\xeb\x5b\xf8\x9c\xac\x47\x0d\x0f\xf2\x28\xf7\x8e\xdc\x48\xdb\xb6\x3a\x42\x74\x3b\x3a\xca\x80\xc0\x71\x40\x83\x32\xa2\x82\x64\x15\x06\xa0\x16\xe1\xcb\xfd\x16\x1e\x75\x8d\x36\xa2\x18\x8b\x5a\x22\xff\xa1\x2c\x9d\x67\xc8\xa5\x50\xa3\x70\xa1\x29\xcd\x44\x89\xe5\x5e\x53\x91\x1f\xc2\xb7\x9e\x4b\xfa\x5e\xe1\x4e\x5b\x84\x0b\xe9\xe9\xe2\xe5\x85\x7b\xdc\xdb\x48\xd2\x18\x60\x00\xbc\xac\x9f\x65\x83\x51\xac\x36\x4f\x5f\x07\xa4\x68\x90\x20\x79\x25\x09\xe1\xea\x6a\x81\x34\x41\x2a\x84\xa2\x1b\xd0\x5f\x2b\xe0\x33\xe7\x74\xee\xc7\xb9\x01\x4a\xa4\x4d\x84\xc9\x8f\x7c\x15\x5e\x7b\x38\x0e\xdc\x3a\x05\x03\x8d\xa6\xdc\xe2\x3f\xe7\x64\x74\x75\xdd\x14\x0a\x0f\xc0\x51\x40\xa9\x0c\x7f\xff\x76\x06\xaa\xd3\xcd\x1c\xc6\xdf\x46\x13\xbe\x7f\x7d\x46\x33\x84\xac\x38\x48\xdb\x20\x88\x6d\x90\x07\x1d\xc5\x9d\x52\xce\xf2\xe5\x49\x7c\xcf\x6a\xd9\x86\xa5\xdc\x85\x80\xbe\x17\x9c\xec\x7b\xb4\x8a\x6f\x36\xeb\x69\xb2\x82\x05\x8c\x25\x83\x90\x57\x7a\x31\xbb\x32\x64\x17\xc6\xfa\x0e\xed\x61\xa4\x8f\x72\x8b\xc7\x71\x6c\x91\xe7\x16\xe4\x51\xb0\xfa\x36\x55\x29\x62\xa8\x9d\x25\xb4\x24\x6a\xb7\x2f\xbb\x2e\xa5\x72\x2c\x2c\x72\x7f\x0c\xe5\x5e\x46\xe2\xab\xd2\xf6\x3c\x05\x7f\xa0\x92\xb1\xfd\xf7\xd3\xc5\xa0\xa7\xc5\x18\x66\x7d\xb7\x5e\x43\x5e\x13\x92\x41\x34\x27\x28\x59\x8d\x5c\xfd\xfc\xb6\x79\x58\xdf\x6f\xf2\x8b\x7f\xfe\x11\x77\x8e\x97\x70\x16\xf0\x83\xd0\xf3\x4a\x9c\x3b\x39\xb1\x32\x29\x7b\x78\x66\xd8\x1c\xfc\x0d\x00\x00\xff\xff\xdf\x9a\xd1\x07\x1e\x03\x00\x00")

func assetsDockerfilePythonBytes() ([]byte, error) {
	return bindataRead(
		_assetsDockerfilePython,
		"assets/Dockerfile-python",
	)
}

func assetsDockerfilePython() (*asset, error) {
	bytes, err := assetsDockerfilePythonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/Dockerfile-python", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsEntrypoint = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x4f\xbb\x4e\x03\x31\x10\xec\xfd\x15\x43\x8e\x02\x8a\xd8\x81\x82\x22\x88\x06\x2a\x5e\x55\xd2\x45\x29\x1c\x67\xef\x6c\x29\xb1\x2d\x7b\x4f\x21\x3a\xdd\xbf\xe3\x7b\xb4\x48\x34\x1e\xcf\xce\x43\xbb\xd5\x8d\x3a\x38\xaf\x0e\x3a\x5b\x2c\xa9\x15\x95\xa8\x40\x9e\xd3\x35\x06\xe7\x79\xa4\x6f\x21\x5e\x93\x6b\x2c\xe3\xce\xdc\xe3\x71\xf5\xf0\x84\x8f\xd6\x47\x72\xf8\xd4\x17\x7d\x0e\x1c\x46\xdb\xd6\xba\x8c\x1c\x6a\xbe\xe8\x44\x28\xff\x44\x27\xd2\x99\x8e\x68\xfd\x91\x12\xd8\x12\xbe\xdf\xb7\xf8\x72\x86\x7c\x26\x39\x86\x2c\x73\x5c\x2b\x15\x62\x19\x85\x36\x19\x92\x21\x35\xea\x34\x59\xb2\x3a\x3b\x5e\xce\x44\x46\x1b\x4b\xc4\xd5\xd8\xed\x70\x5b\xe1\x05\x2b\xec\xf7\xcf\x43\xad\x17\x00\xfd\x90\xc1\x70\x85\xa8\x9d\x10\x64\x6c\xc0\xe2\x95\xea\x50\x56\xd9\x98\xe4\x22\x63\xc3\x14\xf3\x7a\x21\xba\x2e\x69\xdf\x10\xe4\x24\x4f\x6a\xdf\xcf\x99\xae\x93\x7d\x3f\x98\x0a\x94\x97\xfc\xb1\xe0\xac\xfd\x55\xf4\x9f\x8a\xdf\x00\x00\x00\xff\xff\xae\x78\xf8\x79\x68\x01\x00\x00")

func assetsEntrypointBytes() ([]byte, error) {
	return bindataRead(
		_assetsEntrypoint,
		"assets/entrypoint",
	)
}

func assetsEntrypoint() (*asset, error) {
	bytes, err := assetsEntrypointBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/entrypoint", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsEntrypointGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x4f\xbd\x6e\xf3\x20\x14\xdd\x79\x8a\xf3\xd9\x19\xbe\x0e\x31\x69\x87\x0e\xa9\x32\xb4\x1d\xfa\xaf\x56\x4a\xb6\x28\x03\xc1\xd7\x06\x29\x01\x04\x58\x69\x64\xf9\xdd\x0b\xb1\xd7\x4a\x5d\xb8\x87\x7b\x7e\x38\x94\xff\xf8\x5e\x1b\xbe\x17\x41\x61\x4e\x1d\x2b\x59\x09\x32\xd1\x9f\x9d\xd5\x26\xce\x5b\x7b\xd9\x3c\x5a\x77\xf6\xba\x55\x11\xff\xe5\x15\x6e\x16\xd7\xb7\x78\xed\x8c\x23\x8d\x37\x71\x12\x47\x1b\x47\xd9\x46\xe9\x80\x60\x9b\x78\x12\x9e\x90\xb0\xa7\x03\x89\x40\x35\x3a\x53\x93\x47\x54\x84\x8f\x97\x0d\xde\xb5\x24\x13\xa8\xba\x98\x54\x8c\x6e\xc9\xb9\x75\x69\x65\x3b\x2f\xa9\xb2\xbe\xe5\x87\x51\x12\xf8\x51\xc7\xf9\x74\xa9\x9c\x72\xc9\xf2\x75\xbf\x79\x5e\x15\xb3\xa7\xcf\x0c\x72\xfb\xe5\x2c\xa3\x82\x31\xdd\x60\xbb\xc5\xac\xc4\x0a\x0b\xec\x76\x77\xf9\x41\xc3\x00\xfa\x26\x89\xfc\x45\xd6\x68\xc6\x18\x49\x65\x51\x3c\x50\x63\x53\xcb\xb5\xf4\xda\x45\xac\x23\xb9\xb0\x2c\x58\xdf\x7b\x61\x5a\x42\x35\xd2\x23\x3b\x0c\x93\xa7\xef\xab\x61\xc8\xa2\x34\xd2\x49\xa6\x4e\x73\xe2\x7e\x0b\xfa\x4b\xc4\x4f\x00\x00\x00\xff\xff\x36\xb3\xce\xee\x86\x01\x00\x00")

func assetsEntrypointGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsEntrypointGo,
		"assets/entrypoint-go",
	)
}

func assetsEntrypointGo() (*asset, error) {
	bytes, err := assetsEntrypointGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/entrypoint-go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsEntrypointPython = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x5d\x6f\xda\x30\x14\x7d\xf7\xaf\x38\x33\x51\x55\x1e\x12\x97\x56\xda\x03\x13\x0f\xdb\x54\x69\xec\x13\x0d\x34\x69\x62\x54\x72\xc3\x25\xb1\x14\x6c\xcf\x76\x68\x11\xe5\xbf\xcf\x09\x19\x8c\x4d\x93\xfa\x62\xfb\xde\x73\xef\x39\x3e\xd7\xee\xbd\x10\xf7\x4a\x8b\x7b\xe9\x4b\xa4\x54\xb3\x1e\xeb\x81\x74\x70\x5b\x6b\x94\x0e\xa9\xdd\x86\xd2\xe8\x36\xfb\xd6\xd8\xad\x53\x45\x19\x70\x99\xf7\x71\x7d\x35\x78\x89\xf7\xb5\xb6\xa4\xf0\x41\x3e\xc8\xb5\x09\xa6\x2d\x9b\x95\xca\xc3\x9b\x55\x78\x90\x8e\x10\xcf\x8e\x2a\x92\x9e\x96\xa8\xf5\x92\x1c\x42\x49\xf8\x34\x9e\xe1\xa3\xca\x49\x7b\xca\xda\xa6\x32\x04\x3b\x14\xc2\xd8\x98\x32\xb5\xcb\x29\x33\xae\x10\xd5\xa1\xc4\x8b\xb5\x0a\x69\x17\x64\xb6\xb4\xb1\x65\xf2\x7a\xf6\x6e\xc4\x85\x33\x26\x88\xcc\x6e\x49\x6f\x1a\x1b\xc3\xa4\xc9\x73\x46\x1b\x59\x81\x27\x97\x2d\x00\xa5\x55\x40\xda\xe7\xb8\xb8\xc0\x8f\xbf\xb0\x8d\x72\xa1\x96\x55\x3c\xa6\xbf\xcb\x18\x53\x2b\xcc\xe7\x48\x7a\x18\xe1\x0a\x8b\xc5\xab\xe6\xce\x9a\x01\xf4\x48\x39\x9a\x49\xb1\x95\x62\x6c\xf2\xfd\xdb\xed\xd7\xe9\xf8\xcb\xe7\xd1\x49\xc8\x07\x59\x55\x48\x2b\x3c\xa1\x71\xcc\xbd\x80\x10\x05\x8f\x61\xe1\xc8\x22\xbd\x05\xbf\x4b\x06\x97\xc9\xd3\xfc\x2e\x5d\xf4\x9b\x7c\x49\x72\x89\x74\xd0\x67\x94\x97\x06\x7c\x4a\x01\x93\x76\xe6\xd8\x90\xf3\xca\xe8\x21\x92\xa3\x12\x67\xe7\x42\x27\xa4\x03\x2a\x93\xcb\xb3\xf4\x9f\x5e\x6e\xce\xbc\x1c\xe5\x62\x9f\x72\x46\xaf\xe3\xab\x47\xad\xeb\x51\x72\xc3\x1b\x3c\xb2\xb5\x41\xeb\xf5\x50\x3d\xee\x64\xa7\x81\xac\x1f\xf2\x96\x3b\x7e\x9a\xf8\xc2\x3f\x6b\xe5\xa8\x61\xf0\x59\x78\x0c\x38\xc9\x58\x65\x4f\x63\x71\xff\x54\x36\xe4\xbb\x9d\x93\xba\x20\x64\x1d\xfd\x7e\xdf\xc9\xed\x76\xd9\x7e\xcf\x59\xbb\xc5\x95\xf4\x32\xee\x1d\xf6\x86\x56\x26\x7e\xaf\x69\xee\x94\x0d\xc7\x0b\x1d\xa9\x0e\xf0\x01\x7d\x16\xdf\xff\x88\x9e\x43\xf1\x2b\x00\x00\xff\xff\xd5\x38\x57\x39\x43\x03\x00\x00")

func assetsEntrypointPythonBytes() ([]byte, error) {
	return bindataRead(
		_assetsEntrypointPython,
		"assets/entrypoint-python",
	)
}

func assetsEntrypointPython() (*asset, error) {
	bytes, err := assetsEntrypointPythonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/entrypoint-python", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/Dockerfile": assetsDockerfile,
	"assets/Dockerfile-go": assetsDockerfileGo,
	"assets/Dockerfile-python": assetsDockerfilePython,
	"assets/entrypoint": assetsEntrypoint,
	"assets/entrypoint-go": assetsEntrypointGo,
	"assets/entrypoint-python": assetsEntrypointPython,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"Dockerfile": &bintree{assetsDockerfile, map[string]*bintree{}},
		"Dockerfile-go": &bintree{assetsDockerfileGo, map[string]*bintree{}},
		"Dockerfile-python": &bintree{assetsDockerfilePython, map[string]*bintree{}},
		"entrypoint": &bintree{assetsEntrypoint, map[string]*bintree{}},
		"entrypoint-go": &bintree{assetsEntrypointGo, map[string]*bintree{}},
		"entrypoint-python": &bintree{assetsEntrypointPython, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

